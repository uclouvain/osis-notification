info:
  description: ''
  title: ''
  version: ''
openapi: 3.0.0
paths:
  /:
    get:
      description: Return all sent notifications associated to a specific user.
      operationId: notification_list
      parameters:
      - in: query
        name: limit
        schema:
          description: Number of results to return per page.
          title: Limit
          type: integer
      - in: query
        name: offset
        schema:
          description: The initial index from which to return the results.
          title: Offset
          type: integer
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordre
          type: string
      - in: query
        name: search
        schema:
          description: A search term.
          title: Rechercher
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - notification
  /{notification_uuid}:
    patch:
      description: 'Mark a single given notification as read if the notification is
        sent. If the notification is already mark as sent, it marks it as sent.'
      operationId: notification_partial_update
      parameters:
      - in: path
        name: notification_uuid
        required: true
        schema:
          description: ''
          title: ''
          type: string
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordre
          type: string
      - in: query
        name: search
        schema:
          description: A search term.
          title: Rechercher
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - notification
    put:
      description: 'Mark a single given notification as read if the notification is
        sent. If the notification is already mark as sent, it marks it as sent.'
      operationId: notification_update
      parameters:
      - in: path
        name: notification_uuid
        required: true
        schema:
          description: ''
          title: ''
          type: string
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordre
          type: string
      - in: query
        name: search
        schema:
          description: A search term.
          title: Rechercher
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - notification
  /mark_all_as_read:
    put:
      description: 'Mark all the current user sent notifications as read.'
      operationId: notification_mak_all_as_read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
      - notification
servers:
  - url: https://{environment}.osis.uclouvain.be/notifications/v1/
    variables:
      environment:
        default: dev
        enum:
          - dev # Development server
          - qa # Staging server
          - test # Test server
  - url: https://osis.uclouvain.be/api/notifications/v1/
    description: 'Production server'
components:
  parameters:
    Accept-Language:
      in: header
      name: Accept-Language
      description: >
        The header advertises which languages the client is able to understand, and which locale variant is preferred. (By languages, we mean natural languages, such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    NotificationList:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    PaginatedNotificationList:
      type: object
      properties:
        count:
          type: integer
          example: 3
        unread_count:
          type: integer
          example: 3
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    Notification:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/NotificationStateEnum'
        payload:
          type: string
          example: 'Your download is available'
        created_at:
          type: string
          format: date
          example: '12/08/2021 15:22'
        sent_at:
          type: string
          format: date
          example: '12/08/2021 15:22'
        read_at:
          type: string
          format: date
          example: '12/08/2021 15:22'
    NotificationStateEnum:
      type: string
      enum:
        - 'PENDING_STATE'
        - 'SENT_STATE'
        - 'READ_STATE'
    AcceptedLanguageEnum:
      type: string
      enum:
        - 'en'
        - 'fr-be'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message